# This bootscript is a example of what a bootscript may look like.
# Only use this as a reference and not for an actual product implementation.

# Setting this GPIO is only applicable to the Positron boards.
# Since there is no other PTIC-related product using the i.MX8M Nano building block,
# enabling this GPIO is defined here.
# TODO: Remove this specification when i.MX8M Nano building block is used in other products.
echo " - Enabling USB1 by enabling USB_OTG_EN (GPIO1_13) "
gpio set 13

echo " - Setting kernel arguments"
setenv bootargs ${bootargs} console=ttymxc3,115200 root=/dev/mmcblk0p4 rootfstype=ext4 rootwait rw

# The following if statements are used for qualification.

# This test is part of test case 'U-Boot Firmware Image'
## The factory data cannot be read in ${fit_addr}, therefore load into last 128KiB of FIT image location in DDR.
## This is enough, since FIT image is not maximum size of storage partition.
if test -n "${test_retrieve_factory_data}"; then
  echo " --- Testing retrieving factory data in bootscript --- "
  setenv test_retrieve_factory_data && sf probe &&
  sf read 0x695E0000 0x00420000 0x00020000 && env import 0x695E0000 && saveenv
fi

# This test is part of test case 'U-Boot Firmware Image: env export'
## The factory should not be modified, since it is programmed manually in the bootloader. Therefore, only export one
## variable to the customer_data partition as text format to verify the functionality of env export.
## The same method of test_retrieve_factory_data is used since only one variable will be exported
## in the customer_data partition.
if test -n "${test_env_export}"; then
  echo " --- Testing exporting environment variable in bootscript --- "
  setenv test_env_export && setenv customer prodrive && env export -s 0x20000 -t 0x695E0000 customer &&
  sf probe && sf write 0x695E0000 0x00440000 0x00020000
fi

# This test is part of test case 'U-Boot Additional Features Environment'
if test -n "${test_environment}"; then
  echo " --- Testing U-Boot environment --- "
  if itest.s "${ptic}" -eq ptic; then
    echo true;
  else
    echo false;
  fi;
fi

# This test is part of test case 'U-Boot Exit Bootscript'
if test -n "${test_exit_bootscript}"; then
  echo " --- Testing Exit U-Boot Command --- "
  setenv test_exit_bootscript && exit 1; echo "Test Exit Bootscript Failed"
fi

# This test is part of test case 'U-Boot Additional Features USB Ethernet'
if test -n "${test_usb_ethernet}"; then
  echo " --- Testing USB Ethernet --- "
  setenv autoload no && usb start && dhcp
fi

# This test is part of test case 'Data Security Fusing'
if test -n "${test_hab_status}"; then
  echo " --- Testing HAB Status --- "
  hab_status
fi

# This test is part of test case 'U-Boot Watchdog Without Reset'
if test -n "${test_wdt_noreset}"; then
  echo " --- Testing WDT Without Reset --- "
  setenv test_wdt_noreset && saveenv && sleep 130
fi

# This test is part of test case 'U-Boot Watchdog With Reset'
if test -n "${test_wdt_reset}"; then
  echo " --- Testing WDT With Reset --- "
  setenv test_wdt_reset && saveenv && sleep 10 && wdt dev watchdog@30280000 && wdt reset && sleep 130
fi

# This test is part of test case 'U-Boot SPI NOR Flash'
if test -n "${test_boot_env}"; then
  echo " --- Testing Writing U-Boot variable to SPI NOR --- "
  setenv test_boot_env && setenv boot_env_variable passed && saveenv
fi

echo ===== U-Boot Script i.MX8M Nano Building Block =====
bootm ${fit_addr}
